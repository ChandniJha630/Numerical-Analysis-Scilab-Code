clc;
deff('g=f(x,y)','g=-2*x-y')
x0=0;
y0=1;
xn=1;
h=0.01;
n=(xn-x0)/h;
function rk2(x0,y0,xn,h)
   for i=1:n
    x(1)=x0;y(1)=y0;
    x(i+1)=x(i)+h;
    k1=h*f(x(i),y(i));
    k2=h*f(x(i)+h,y(i)+k1);
    y(i+1)=y(i)+0.5*(k1+k2);

end
printf("Runge Kutte Method Of 2nd Order:\n ");
disp([x y]) ;
endfunction
function rk4(x0,y0,xn,h)
   for i=1:n
    x(1)=x0;y(1)=y0;
    x(i+1)=x(i)+h;
    k1=h*f(x(i),y(i));
    k2=h*f(x(i)+h/2,y(i)+k1*0.5);
    k3=h*f(x(i)+h/2,y(i)+k2*0.5);
     k4=h*f(x(i)+h,y(i)+k3);
    y(i+1)=y(i)+(1/6)*(k1+2*k2+2*k3+k4);

end
printf("Runge Kutte Method Of 4th Order:\n ");
disp([x y]) ;
endfunction
rk2(x0,y0,xn,h);
rk4(x0,y0,xn,h);
